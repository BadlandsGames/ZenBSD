.\"	$NetBSD: mbrtoc8.3,v 1.2 2024/08/16 18:35:19 uwe Exp $
.\"
.\" Copyright (c) 2024 The NetBSD Foundation, Inc.
.\" All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE NETBSD FOUNDATION, INC. AND CONTRIBUTORS
.\" ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
.\" TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
.\" PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE FOUNDATION OR CONTRIBUTORS
.\" BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
.\" CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
.\" SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
.\" INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
.\" CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
.\" ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
.\" POSSIBILITY OF SUCH DAMAGE.
.\"
.Dd August 15, 2024
.Dt MBRTOC8 3
.Os
.\"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
.Sh NAME
.Nm mbrtoc8
.Nd Restartable multibyte to UTF-8 code unit conversion
.\"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
.Sh LIBRARY
.Lb libc
.\"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
.Sh SYNOPSIS
.
.In uchar.h
.
.Ft size_t
.Fo mbrtoc8
.Fa "char8_t * restrict pc8"
.Fa "const char * restrict s"
.Fa "size_t n"
.Fa "mbstate_t * restrict ps"
.Fc
.\"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
.Sh DESCRIPTION
The
.Nm
function attempts to decode a multibyte character sequence at
.Fa s
of up to
.Fa n
bytes in the current locale, and yield the content as UTF-8 code
units via the output parameter
.Fa pc8 .
.Fa pc8
may be null, in which case no output is stored.
.Bl -bullet
.It
If the multibyte sequence at
.Fa s
is invalid or an error occurs in decoding,
.Nm
returns
.Li (size_t)-1
and sets
.Xr errno 2
to indicate the error.
.It
If the multibyte sequence at
.Fa s
is still incomplete after
.Fa n
bytes, including any previously processed input saved in
.Fa ps ,
.Nm
saves its state in
.Fa ps
after all the input so far and returns
.Li "(size_t)-2".
.It
If
.Nm
finds the null scalar value at
.Fa s ,
then it stores zero at
.Li * Ns Fa pc8
and returns zero.
.It
If
.Nm
finds a nonnull scalar value in the US-ASCII range, i.e., a 7-bit
scalar value, then it stores the scalar value at
.Li * Ns Fa pc8 ,
and returns the number of bytes it read from the input.
.It
If
.Nm
finds a scalar value outside the US-ASCII range, it:
.Bl -dash -compact
.It
stores the leading byte in the scalar value's UTF-8 encoding at
.Li * Ns Fa pc8 ;
.It
stores conversion state in
.Fa ps
to remember the rest of the pending scalar value; and
.It
returns the number of bytes it read from the input.
.El
.It
If
.Nm
had previously found a scalar value outside the US-ASCII range, then,
instead of any of the above options, it:
.Bl -dash -compact
.It
stores the next byte in the scalar value's UTF-8 encoding at
.Li * Ns Fa pc8 ;
.It
updates the conversion state in
.Fa ps
to consume this byte; and
.It
returns
.Li (size_t)-3
to indicate that no bytes were consumed but a code unit was yielded
nevertheless.
.El
.El
.Pp
If
.Fa s
is a null pointer, the
.Nm
call is equivalent to:
.Bd -ragged -offset indent
.Fo mbrtoc8
.Li NULL ,
.Li \*q\*q ,
.Li 1 ,
.Fa ps
.Fc
.Ed
.Pp
This always returns zero, and has the effect of resetting
.Fa ps
to the initial conversion state, without writing to
.Fa pc8 ,
even if it is nonnull.
.Pp
If
.Fa ps
is a null pointer,
.Nm
uses an internal
.Vt mbstate_t
object with static storage duration, distinct from all other
.Vt mbstate_t
objects
.Po
including those used by
.Xr mbrtoc16 3 ,
.Xr mbrtoc32 3 ,
.Xr c8rtomb 3 ,
.Xr c16rtomb 3 ,
and
.Xr c32rtomb 3
.Pc ,
which is initialized at program startup to the initial conversion
state.
.\"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
.Sh RETURN VALUES
The
.Nm
function returns:
.Bl -tag -width Li
.It Li 0
.Bq null
if within the next
.Fa n
bytes at
.Fa s
the first multibyte character is null.
.It Ar i
.Bq code unit
where
.Li 0
\*(Le
.Ar i
\*(Le
.Fa n ,
if either
.Fa ps
is in the initial conversion state or the previous call to
.Nm
with
.Fa ps
had not yielded an incomplete UTF-8 code unit, and within the first
.Ar i
bytes at
.Fa s
a Unicode scalar value was decoded.
.It Li (size_t)-3
.Bq continuation
if the previous call to
.Nm
with
.Fa ps
had yielded an incomplete UTF-8 code unit for a Unicode scalar value
outside the US-ASCII range; no additional input is consumed in this
case.
.It Li (size_t)-2
.Bq incomplete
if either
.Fa ps
is in the initial conversion state or the previous call to
.Nm
with
.Fa ps
had not yielded an incomplete UTF-8 code unit, and within the first
.Fa n
bytes at
.Fa s ,
including any previously buffered input, no complete Unicode scalar
value could be decoded.
.It Li (size_t)-1
.Bq error
if any encoding error was detected;
.Xr errno 2
is set to reflect the error.
.El
.\"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
.Sh EXAMPLES
Print the UTF-8 code units of a multibyte string in hexadecimal text:
.Bd -literal -offset indent
char *s = ...;
size_t n = ...;
mbstate_t mbs = {0};    /* initial conversion state */

while (n) {
        char8_t c8;
        size_t len;

        len = mbrtoc8(&c8, s, n, &mbs);
        switch (len) {
        case 0:         /* null terminator */
                assert(c8 == '\e0');
                goto out;
        default:        /* consumed input and yielded a byte c8 */
                printf("0x%02hhx\en", c8);
                break;
        case (size_t)-3: /* yielded a pending byte c8 */
                printf("continue 0x%02hhx\en", c8);
                break;
        case (size_t)-2: /* incomplete */
                printf("incomplete\en");
                goto readmore;
        case (size_t)-1: /* error */
                printf("error: %d\en", errno);
                goto out;
        }
        s += len;
        n -= len;
}
.Ed
.\"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
.Sh ERRORS
.Bl -tag -width Bq
.It Bq Er EILSEQ
The multibyte sequence cannot be decoded as a Unicode scalar value.
.It Bq Er EIO
An error occurred in loading the locale's character conversions.
.El
.\"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
.Sh SEE ALSO
.Xr c8rtomb 3 ,
.Xr c16rtomb 3 ,
.Xr c32rtomb 3 ,
.Xr mbrtoc16 3 ,
.Xr mbrtoc32 3 ,
.Xr uchar 3
.Rs
.%B The Unicode Standard
.%O Version 15.0 \(em Core Specification
.%Q The Unicode Consortium
.%D September 2022
.%U https://www.unicode.org/versions/Unicode15.0.0/UnicodeStandard-15.0.pdf
.Re
.Rs
.%A F. Yergeau
.%T UTF-8, a transformation format of ISO 10646
.%R RFC 3629
.%D November 2003
.%I Internet Engineering Task Force
.%U https://datatracker.ietf.org/doc/html/rfc3629
.Re
.\"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
.\" .Sh STANDARDS
.\" The
.\" .Nm
.\" function conforms to
.\" .St -isoC-2023 .
.\" .\" XXX PR misc/58600: man pages lack C17, C23, C++98, C++03, C++11, C++17, C++20, C++23 citation syntax
.\"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
.Sh HISTORY
The
.Nm
function first appeared in
.Nx 11.0 .
